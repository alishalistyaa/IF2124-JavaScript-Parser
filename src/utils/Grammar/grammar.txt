START -> ENTER START
START -> SENTENCE
ENTER -> NEWLINE
ENTER -> ENTER ENTER 
EOP -> ENTER
EOP -> SCOLON
EOP -> SCOLON ENTER
NEWLINE -> newline
INCR -> incr
DECR -> decor
SEQ -> seq
SINEQ -> sineq
EQ -> eq
INEQ -> ineq
BNOT -> bnot
LNOT -> lnot
EXPNA -> expna
MULA -> mula
DIVA -> diva
REMA -> rema
ADDA -> adda
SUBA -> suba
LSA -> lsa
URSA -> ursa
RSA -> rsa
LANDA -> landa
LORA -> lora
BANDA -> banda
BXORA -> bxora
BORA -> bora
LE -> le
GE -> ge
ADD -> add
SUB -> sub
DIV -> div
EXPN -> expn
MUL -> mul
REM -> rem
LS -> ls
URS -> urs
RS -> rs
L -> l
G -> g
LAND -> land
LOR -> lor
BAND -> band
BOR -> bor
BXOR -> bxor
A -> a
QUESTM -> questm
COLON -> colon
SCOLON -> scolon
DOT -> dot
COMMA -> comm
KSO -> kso
KSC -> ksc
KLO -> klo
KLC -> klc
KKO -> kko
KKC -> kkc
SET_CONST -> const
SET_VAR -> var
SET_LET -> let
IF -> if
ELSE -> else
SWITCH_STMT -> switch
CASE -> case
DEFAULT_STMT -> default
DO -> do
WHILE -> while
FOR -> for
BREAK -> break
CONTINUE -> continue
TRY -> try
CATCH -> catch
TRUE -> true
FALSE -> false
SET_FUNC -> function
RETURN -> return
DELETE -> delete
FINALLY -> finally
THROW -> throw
NEW -> new
NULL -> null
NUM -> num
STR -> str
MLSTR -> mlstr
IDEN -> iden
OP -> ADD
OP -> SUB
OP -> MUL
OP -> EXPN
OP -> DIV
OP -> REM
OP -> BAND
OP -> BOR
OP -> BXOR
OP -> LS
OP -> RS
OP -> URS
OPS -> BNOT
OPAS -> INCR 
OPAS -> DECR
OPAD -> A
OPAD -> ADDA
OPAD -> SUBA
OPAD -> MULA
OPAD -> EXPNA
OPAD -> DIVA
OPAD -> REMA
OPAD -> LSA
OPAD -> RSA
OPAD -> URSA
OPAD -> BANDA
OPAD -> BXORA
OPAD -> BORA
OPAD -> LANDA
OPAD -> LORA
OPC -> EQ
OPC -> SEQ

OPC -> SINEQ
OPC -> G
OPC -> L
OPC -> GE
OPC -> LE
OPLD -> LAND
OPLD -> LOR
OPLS -> LNOT
DATA -> NUM
DATA -> BOOLEAN
DATA -> STRING
KKO -> KKO ENTER
KKC -> ENTER KKC
BOOLEAN -> DATA OPC DATA
BOOLEAN -> DATA OPLD DATA
BOOLEAN -> OPLS DATA
BOOLEAN -> TRUE
BOOLEAN -> FALSE
SENTENCE -> SENTENCE SENTENCE
SENTENCE -> COND_BLOCK EOP
SENTENCE -> LOOP_BLOCK EOP
SENTENCE -> FUNC EOP
SENTENCE -> EXCP EOP
SENTENCE -> ASSIGN EOP
SENTENCE -> EOP
ASSIGN -> IDEN OPAD DATA
ASSIGN -> IDEN OPAD MATH
DECLARE -> IDEN A DATA
DECLARE -> IDEN A MATH
DECLARE -> IDEN A NULL
MATH -> DATA OP DATA
MATHAS -> IDEN OPAS
MATHAS -> OPAS IDEN
EXP -> IDEN OP IDEN
FUNC -> SET_FUNC NAME_FUNC KLO PARAM KLC KKO FUNC_STMT KKC
FUNC -> SET_FUNC NAME_FUNC KLO KLC KKO FUNC_STMT KKC
PARAM -> PARAM COMMA PARAM
PARAM -> IDEN
PARAM -> DECLARE
NAME_FUNC -> IDEN
STMT -> STMT STMT
STMT -> SENTENCE
FUNC_STMT -> STMT
FUNC_STMT -> STMT FUNC_STMT
FUNC_STMT -> RETURN_STMT DATA
FUNC_STMT -> RETURN_STMT ASSIGN
FUNC_STMT -> RETURN_STMT MATH
FUNC_STMT -> RETURN_STMT EXP
LOOP_STMT -> STMT
LOOP_STMT -> STMT BREAK
RETURN_STMT -> IF KLO COND_STMT KLC KKO RETURN DATA KKC
RETURN_STMT -> IF KLO COND_STMT KLC KKO RETURN ASSIGN KKC
RETURN_STMT -> IF KLO COND_STMT KLC KKO RETURN MATH KKC
RETURN_STMT -> IF KLO COND_STMT KLC KKO RETURN EXP KKC
VAR -> SET_VAR IDEN EOP
VAR -> SET_VAR DECLARE EOP
CONST -> SET_CONST IDEN EOP
CONST -> SET_CONST DECLARE EOP
LET -> SET_LET IDEN EOP
LET -> SET_LET DECLARE EOP
FOR_STMT -> FOR KLO FOR_EXP SCOLON FOR_EXP SCOLON FOR_EXP KLC KKO LOOP_STMT KKC
FOR_STMT -> FOR KLO FOR_EXP SCOLON FOR_EXP SCOLON KLC KKO LOOP_STMT KKC
FOR_STMT -> FOR KLO SCOLON FOR_EXP SCOLON FOR_EXP KLC KKO LOOP_STMT KKC
FOR_STMT -> FOR KLO SCOLON FOR_EXP SCOLON KLC KKO LOOP_STMT KKC
FOR_EXP -> CONST
FOR_EXP -> LET
FOR_EXP -> BOOLEAN
FOR EXP -> VAR
FOR_EXP -> ASSIGN
FOR_EXP -> DECLARE
FOR_EXP -> NULL
FOR_EXP -> MATH
FOR_EXP -> MATHAS
FOR_EXP -> EXP
WHILE_STMT -> WHILE KLO BOOLEAN KLC KKO LOOP_STMT KKC
WHILE -> while
DOWHILE_STMT -> DO KKO LOOP_STMT KKC WHILE KLO BOOLEAN KLC
BREAK -> IF KLO COND_STMT KLC KKO BREAK KKC
CONTINUE -> IF KLO COND_STMT KLC KKO CONTINUE KKC
EXCP -> TRY_STMT CATCH_STMT FINALLY_STMT
EXCP -> TRY_STMT FINALLY_STMT
EXCP -> TRY_STMT CATCH_STMT
EXCP -> TRY_STMT
TRY_STMT -> EXCP
TRY_STMT -> try KKO FUNC_STMT KKC
FINALLY_STMT -> FINALLY KKO FUNC_STMT 
CATCH_STMT -> CATCH KLO IDEN KLC KKO FUNC_STMT KKC
CATCH_STMT -> CATCH KKO FUNC_STMT 
THROW_STMT -> THROW IDEN
THROW_STMT -> THROW NEW FUNC
COND_BLOCK -> IF_STMT
COND_BLOCK -> IF_STMT COND_BLOCK
COND_BLOCK -> IF_STMT ELSE_STMT 
COND_BLOCK -> IF_STMT ELIF_STMT ELSE_STMT 
COND_STMT -> BOOLEAN 
COND_STMT -> FUNC 
COND_STMT -> IDEN 
COND_STMT -> ASSIGN
IF_STMT -> IF KLO COND_STMT KLC KKO SENTENCE KKC
IF_STMT -> IF KLO COND_STMT KLC KKO KKC
ELIF_STMT -> ELIF_STMT ELIF_STMT
ELIF_STMT -> ELIF KLO COND_STMT KLC KKO SENTENCE KKC
ELIF_STMT -> ELIF KLO COND_STMT KLC KKO KKC
ELSE -> ELSE KKO SENTENCE KKC
ELSE -> ELSE KKO KKC
ELIF -> ELSE IF
SWITCH -> SWITCH_STMT KLO EXP KLC KKO CASE KKC
SWITCH -> SWITCH_STMT KLO EXP KLC KKO KKC
SWITCH -> SWITCH_STMT KLO KLC KKO CASE KKC
SWITCH -> SWITCH_STMT KLO KLC KKO KKC
CASE -> CASE CASE
CASE -> CASE DEFAULT 
CASE -> CASE DATA COLON LOOP_STMT
CASE -> CASE DATA COLON 
DEFAULT -> DEFAULT_STMT COLON LOOP_STMT
DELETE -> DELETE IDEN EOP
DELETE_STMT -> delete