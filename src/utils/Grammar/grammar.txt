EOP -> TITIKKOMA
EPSL -> Îµ
ENTER -> NEWLINE
ENTER -> NEWLINE ENTER
START -> ENTER START
START -> START ENTER
START -> IMPORT_STMT
OP -> +
OP -> -
OP -> *
OP -> **
OP -> /
OP -> %
OP -> &
OP -> |
OP -> ^
OP -> <<
OP -> >>
OP -> >>>
OPS -> ~
OPAS -> ++ 
OPAS -> --
OPAD -> =
OPAD -> +=
OPAD -> -=
OPAD -> *=
OPAD -> **=
OPAD -> /=
OPAD -> %=
OPAD -> <<=
OPAD -> >>=
OPAD -> >>>=
OPAD -> &=
OPAD -> ^=
OPAD -> |=
OPAD -> &&=
OPAD -> ||=
OPAD -> ??=
OPC -> ==
OPC -> ===
OPC -> !=
OPC -> !==
OPC -> >
OPC -> <
OPC -> >=
OPC -> <=
OPLD -> &&
OPLD -> ||
OPLS -> !
DATA -> INT
DATA -> FLOAT
DATA -> BOOLEAN
DATA -> STRING
DATA -> CHAR
INT -> INT INT
INT -> 1
INT -> 2
INT -> 3
INT -> 4
INT -> 5
INT -> 6
INT -> 7
INT -> 8
INT -> 9
INT -> 0
FLOAT -> INT TITIK INT
NUM -> FLOAT
NUM -> INT
ALPH -> a
ALPH -> b
ALPH -> c
ALPH -> d
ALPH -> e
ALPH -> f
ALPH -> g
ALPH -> h
ALPH -> i
ALPH -> j
ALPH -> k
ALPH -> l
ALPH -> m
ALPH -> n
ALPH -> o
ALPH -> p
ALPH -> q
ALPH -> r
ALPH -> s
ALPH -> t
ALPH -> u
ALPH -> v
ALPH -> w
ALPH -> x
ALPH -> y
ALPH -> z
ALPH -> A
ALPH -> B
ALPH -> C
ALPH -> D
ALPH -> E
ALPH -> F
ALPH -> G
ALPH -> H
ALPH -> I
ALPH -> J
ALPH -> K
ALPH -> L
ALPH -> M
ALPH -> N
ALPH -> O
ALPH -> P
ALPH -> Q
ALPH -> R
ALPH -> S
ALPH -> T
ALPH -> U
ALPH -> V
ALPH -> W
ALPH -> X
ALPH -> Y
ALPH -> Z
TITIK -> .
KOMA -> ,
TITIKKOMA -> ;
PETIKD -> "
PETIKS -> '
SCOMM -> //
MCOMMO -> /*
MCOMMC -> */
KKO -> {
KKC -> }
KLO -> (
KLC -> )
KSO -> [
KSC -> ]
CHAR -> ALPH
STR -> PETIKD STREL PETIKD
STR -> PETIKS STREL PETIKS
STREL -> STREL STREL
STREL -> ALPH 
STREL -> INT
BOOLEAN -> DATA OPC DATA
BOOLEAN -> DATA OPLD DATA
BOOLEAN -> OPLS DATA
BOOLEAN -> TRUE
BOOLEAN -> FALSE
TRUE -> true
FALSE -> false
SENTENCE -> COND_BLOCK 
SENTENCE -> LOOP_BLOCK 
SENTENCE -> FUNC 
SENTENCE -> ASSIGN EOP
SENTENCE -> MATH EOP
IDEN -> ALPH STREL
ASSIGN -> IDEN OPAD DATA
ASSIGN -> IDEN OPAD MATH
DECLARE -> IDEN SD DATA
DECLARE -> IDEN SD MATH
SD -> =
MATH -> DATA OP DATA
FUNC -> SET_FUNC NAME_FUNC KLO PARAM KLC KKO FUNC_STMT KKC
PARAM -> EPSL
PARAM -> PARAM KOMA PARAM
PARAM -> IDEN
PARAM -> DECLARE
NAME_FUNC -> IDEN
SET_FUNC -> function
STMT -> STMT STMT
STMT -> SENTENCE
FUNC_STMT -> STMT
FUNC_STMT -> STMT FUNC_STMT
FUNC_STMT -> RETURN DATA
FUNC_STMT -> RETURN ASSIGN
FUNC_STMT -> RETURN MATH
RETURN -> return
VAR -> SET_VAR IDEN EOP
VAR -> SET_VAR DECLARE EOP
SET_VAR -> var
CONST -> SET_CONST IDEN EOP
CONST -> SET_CONST DECLARE EOP
SET_CONST -> const
LET -> SET_LET IDEN EOP
LET -> SET_LET DECLARE EOP
SET_LET -> let
EXCP -> TRY_STMT FINALLY_STMT CATCH_STMT
EXCP -> TRY_STMT FINALLY_STMT
EXCP -> TRY_STMT CATCH_STMT
TRY_STMT -> EXCP
TRY_STMT -> TRY KKO FUNC_STMT KKC
TRY -> try
FINALLY_STMT -> FINALLY KKO FUNC_STMT KKC
FINALLY -> finally
CATCH_STMT -> CATCH KLO IDEN KLC KKO FUNC_STMT KKC
CATCH_STMT -> CATCH KKO FUNC_STMT KKC
CATCH -> catch
THROW_STMT -> THROW IDEN
THROW_STMT -> THROW NEW FUNC
THROW -> throw
NEW -> new
COND_BLOCK -> IF_STMT
COND_BLOCK -> IF_STMT COND_BLOCK
COND_BLOCK -> IF_STMT ELSE_STMT 
COND_BLOCK -> IF_STMT ELIF_STMT ELSE_STMT 
COND_STMT -> BOOLEAN 
COND_STMT -> FUNC 
COND_STMT -> IDEN 
COND_STMT -> ASSIGN
IF_STMT -> IF KLO COND_STMT KLC KKO SENTENCE KKC
ELIF_STMT -> ELIF_STMT ELIF_STMT
ELIF_STMT -> ELIF KLO COND_STMT KLC KKO SENTENCE KKC
ELSE -> ELSE KKO SENTENCE KKC
ELIF -> ELSE IF
ELSE -> else
IF -> if